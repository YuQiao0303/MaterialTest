<?xml version="1.0" encoding="utf-8"?>

<android.support.v4.widget.DrawerLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/drawer_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <!--DrawerLayout的第一个子控件是主屏幕的内容-->
    <!--CoordinatorLayout是一个高级FrameLayout可以监听其所有子控件的各种事件， 然后自动帮助我们做出最为合理的响应-->
    <android.support.design.widget.CoordinatorLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <!--将Toolbar嵌套到AppBarLayout中，是防止RecyclerView遮挡toolbar的第一步-->
        <android.support.design.widget.AppBarLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content">
            <!--scroll 表示当RecyclerView向上滚动的时候， Toolbar
会跟着一起向上滚动并实现隐藏；enterAlways 表示当RecyclerView向下滚动的时候， Toolbar
会跟着一起向下滚动并重新显示。 snap 表示当Toolbar还没有完全隐藏或显示的时候， 会根据当
前滚动的距离， 自动选择是隐藏还是显示-->
            <android.support.v7.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/colorPrimary"
                android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
                app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
                app:layout_scrollFlags="scroll|enterAlways|snap" />
        </android.support.design.widget.AppBarLayout>
        <!--RecyclerView指定一个布局行为，是防止RecyclerView遮挡toolbar的第2步-->
        <android.support.v4.widget.SwipeRefreshLayout
            android:id="@+id/swipe_refresh"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:layout_behavior="@string/appbar_scrolling_view_behavior">

            <android.support.v7.widget.RecyclerView
                android:id="@+id/recycler_view"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                />
        </android.support.v4.widget.SwipeRefreshLayout>

        <android.support.design.widget.FloatingActionButton
            android:id="@+id/fab"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="bottom|end"
            android:layout_margin="16dp"
            android:src="@drawable/ic_done" />
    </android.support.design.widget.CoordinatorLayout>


    <!--DrawerLayout的第二个子控件是滑动菜单中的内容-->
    <!--layout_gravity 这个属性是必须指定的，
     因为我们需要告诉DrawerLayout滑动菜单是在屏幕的左边还是右边，
     指定left表示滑动菜单在左边， 指定right表示滑动菜单在右边。
     这里我指定了start， 表示会根据系统语言进行判断，
     如果系统语言是左往右的， 比如英语、 汉语， 滑动菜单就在左边，
     如果系统语言是从右往左的， 比如阿拉伯语， 滑动菜单就在右边。-->

    <!--NavigationView，指定menu 和HeaderLayout-->
    <android.support.design.widget.NavigationView
        android:id="@+id/nav_view"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        app:menu="@menu/nav_menu"
        app:headerLayout="@layout/nav_header"/>
</android.support.v4.widget.DrawerLayout>